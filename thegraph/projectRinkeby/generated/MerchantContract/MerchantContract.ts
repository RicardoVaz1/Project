// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ApprovedMerchant extends ethereum.Event {
  get params(): ApprovedMerchant__Params {
    return new ApprovedMerchant__Params(this);
  }
}

export class ApprovedMerchant__Params {
  _event: ApprovedMerchant;

  constructor(event: ApprovedMerchant) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ApprovedMerchant(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Buy extends ethereum.Event {
  get params(): Buy__Params {
    return new Buy__Params(this);
  }
}

export class Buy__Params {
  _event: Buy;

  constructor(event: Buy) {
    this._event = event;
  }

  get PurchaseID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get DateF(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get BuyerAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get Amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Complete extends ethereum.Event {
  get params(): Complete__Params {
    return new Complete__Params(this);
  }
}

export class Complete__Params {
  _event: Complete;

  constructor(event: Complete) {
    this._event = event;
  }

  get PurchaseID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CreatePurchase extends ethereum.Event {
  get params(): CreatePurchase__Params {
    return new CreatePurchase__Params(this);
  }
}

export class CreatePurchase__Params {
  _event: CreatePurchase;

  constructor(event: CreatePurchase) {
    this._event = event;
  }

  get Date(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get Amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get EscrowTime(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Historic extends ethereum.Event {
  get params(): Historic__Params {
    return new Historic__Params(this);
  }
}

export class Historic__Params {
  _event: Historic;

  constructor(event: Historic) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get Sells(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get Refunds(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PausedWithdrawals extends ethereum.Event {
  get params(): PausedWithdrawals__Params {
    return new PausedWithdrawals__Params(this);
  }
}

export class PausedWithdrawals__Params {
  _event: PausedWithdrawals;

  constructor(event: PausedWithdrawals) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get PausedWithdrawals(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Refund extends ethereum.Event {
  get params(): Refund__Params {
    return new Refund__Params(this);
  }
}

export class Refund__Params {
  _event: Refund;

  constructor(event: Refund) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get BuyerAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get Amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TopUpMyContract extends ethereum.Event {
  get params(): TopUpMyContract__Params {
    return new TopUpMyContract__Params(this);
  }
}

export class TopUpMyContract__Params {
  _event: TopUpMyContract;

  constructor(event: TopUpMyContract) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get Amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Withdrawal extends ethereum.Event {
  get params(): Withdrawal__Params {
    return new Withdrawal__Params(this);
  }
}

export class Withdrawal__Params {
  _event: Withdrawal;

  constructor(event: Withdrawal) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get Amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MerchantContract__purchasesResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getDateF(): BigInt {
    return this.value0;
  }

  getAmount(): BigInt {
    return this.value1;
  }

  getStatus(): BigInt {
    return this.value2;
  }

  getEscrow_amount(): BigInt {
    return this.value3;
  }

  getEscrow_time(): BigInt {
    return this.value4;
  }
}

export class MerchantContract extends ethereum.SmartContract {
  static bind(address: Address): MerchantContract {
    return new MerchantContract("MerchantContract", address);
  }

  approved(): boolean {
    let result = super.call("approved", "approved():(bool)", []);

    return result[0].toBoolean();
  }

  try_approved(): ethereum.CallResult<boolean> {
    let result = super.tryCall("approved", "approved():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  checkMyAddress(): Address {
    let result = super.call("checkMyAddress", "checkMyAddress():(address)", []);

    return result[0].toAddress();
  }

  try_checkMyAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "checkMyAddress",
      "checkMyAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  checkMyBalance(): BigInt {
    let result = super.call("checkMyBalance", "checkMyBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_checkMyBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "checkMyBalance",
      "checkMyBalance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  checkMyEscrowAmount(): BigInt {
    let result = super.call(
      "checkMyEscrowAmount",
      "checkMyEscrowAmount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_checkMyEscrowAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "checkMyEscrowAmount",
      "checkMyEscrowAmount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  checkMyName(): string {
    let result = super.call("checkMyName", "checkMyName():(string)", []);

    return result[0].toString();
  }

  try_checkMyName(): ethereum.CallResult<string> {
    let result = super.tryCall("checkMyName", "checkMyName():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getMerchantAddress(): Address {
    let result = super.call(
      "getMerchantAddress",
      "getMerchantAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getMerchantAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getMerchantAddress",
      "getMerchantAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  purchases(param0: BigInt): MerchantContract__purchasesResult {
    let result = super.call(
      "purchases",
      "purchases(uint256):(uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new MerchantContract__purchasesResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try_purchases(
    param0: BigInt
  ): ethereum.CallResult<MerchantContract__purchasesResult> {
    let result = super.tryCall(
      "purchases",
      "purchases(uint256):(uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MerchantContract__purchasesResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get MerchantAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get MerchantName(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveMerchantCall extends ethereum.Call {
  get inputs(): ApproveMerchantCall__Inputs {
    return new ApproveMerchantCall__Inputs(this);
  }

  get outputs(): ApproveMerchantCall__Outputs {
    return new ApproveMerchantCall__Outputs(this);
  }
}

export class ApproveMerchantCall__Inputs {
  _call: ApproveMerchantCall;

  constructor(call: ApproveMerchantCall) {
    this._call = call;
  }
}

export class ApproveMerchantCall__Outputs {
  _call: ApproveMerchantCall;

  constructor(call: ApproveMerchantCall) {
    this._call = call;
  }
}

export class BuyCall extends ethereum.Call {
  get inputs(): BuyCall__Inputs {
    return new BuyCall__Inputs(this);
  }

  get outputs(): BuyCall__Outputs {
    return new BuyCall__Outputs(this);
  }
}

export class BuyCall__Inputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }

  get idPurchase(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BuyCall__Outputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }
}

export class ChangeMyAddressCall extends ethereum.Call {
  get inputs(): ChangeMyAddressCall__Inputs {
    return new ChangeMyAddressCall__Inputs(this);
  }

  get outputs(): ChangeMyAddressCall__Outputs {
    return new ChangeMyAddressCall__Outputs(this);
  }
}

export class ChangeMyAddressCall__Inputs {
  _call: ChangeMyAddressCall;

  constructor(call: ChangeMyAddressCall) {
    this._call = call;
  }

  get NewAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeMyAddressCall__Outputs {
  _call: ChangeMyAddressCall;

  constructor(call: ChangeMyAddressCall) {
    this._call = call;
  }
}

export class CompleteCall extends ethereum.Call {
  get inputs(): CompleteCall__Inputs {
    return new CompleteCall__Inputs(this);
  }

  get outputs(): CompleteCall__Outputs {
    return new CompleteCall__Outputs(this);
  }
}

export class CompleteCall__Inputs {
  _call: CompleteCall;

  constructor(call: CompleteCall) {
    this._call = call;
  }

  get idPurchase(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CompleteCall__Outputs {
  _call: CompleteCall;

  constructor(call: CompleteCall) {
    this._call = call;
  }
}

export class CreatePurchaseCall extends ethereum.Call {
  get inputs(): CreatePurchaseCall__Inputs {
    return new CreatePurchaseCall__Inputs(this);
  }

  get outputs(): CreatePurchaseCall__Outputs {
    return new CreatePurchaseCall__Outputs(this);
  }
}

export class CreatePurchaseCall__Inputs {
  _call: CreatePurchaseCall;

  constructor(call: CreatePurchaseCall) {
    this._call = call;
  }

  get idPurchase(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get purchaseAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get escrowTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreatePurchaseCall__Outputs {
  _call: CreatePurchaseCall;

  constructor(call: CreatePurchaseCall) {
    this._call = call;
  }
}

export class DisapproveMerchantCall extends ethereum.Call {
  get inputs(): DisapproveMerchantCall__Inputs {
    return new DisapproveMerchantCall__Inputs(this);
  }

  get outputs(): DisapproveMerchantCall__Outputs {
    return new DisapproveMerchantCall__Outputs(this);
  }
}

export class DisapproveMerchantCall__Inputs {
  _call: DisapproveMerchantCall;

  constructor(call: DisapproveMerchantCall) {
    this._call = call;
  }
}

export class DisapproveMerchantCall__Outputs {
  _call: DisapproveMerchantCall;

  constructor(call: DisapproveMerchantCall) {
    this._call = call;
  }
}

export class PauseWithdrawalsCall extends ethereum.Call {
  get inputs(): PauseWithdrawalsCall__Inputs {
    return new PauseWithdrawalsCall__Inputs(this);
  }

  get outputs(): PauseWithdrawalsCall__Outputs {
    return new PauseWithdrawalsCall__Outputs(this);
  }
}

export class PauseWithdrawalsCall__Inputs {
  _call: PauseWithdrawalsCall;

  constructor(call: PauseWithdrawalsCall) {
    this._call = call;
  }
}

export class PauseWithdrawalsCall__Outputs {
  _call: PauseWithdrawalsCall;

  constructor(call: PauseWithdrawalsCall) {
    this._call = call;
  }
}

export class RefundCall extends ethereum.Call {
  get inputs(): RefundCall__Inputs {
    return new RefundCall__Inputs(this);
  }

  get outputs(): RefundCall__Outputs {
    return new RefundCall__Outputs(this);
  }
}

export class RefundCall__Inputs {
  _call: RefundCall;

  constructor(call: RefundCall) {
    this._call = call;
  }

  get idPurchase(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get BuyerAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get refundAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class RefundCall__Outputs {
  _call: RefundCall;

  constructor(call: RefundCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TopUpMyContractCall extends ethereum.Call {
  get inputs(): TopUpMyContractCall__Inputs {
    return new TopUpMyContractCall__Inputs(this);
  }

  get outputs(): TopUpMyContractCall__Outputs {
    return new TopUpMyContractCall__Outputs(this);
  }
}

export class TopUpMyContractCall__Inputs {
  _call: TopUpMyContractCall;

  constructor(call: TopUpMyContractCall) {
    this._call = call;
  }
}

export class TopUpMyContractCall__Outputs {
  _call: TopUpMyContractCall;

  constructor(call: TopUpMyContractCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseWithdrawalsCall extends ethereum.Call {
  get inputs(): UnpauseWithdrawalsCall__Inputs {
    return new UnpauseWithdrawalsCall__Inputs(this);
  }

  get outputs(): UnpauseWithdrawalsCall__Outputs {
    return new UnpauseWithdrawalsCall__Outputs(this);
  }
}

export class UnpauseWithdrawalsCall__Inputs {
  _call: UnpauseWithdrawalsCall;

  constructor(call: UnpauseWithdrawalsCall) {
    this._call = call;
  }
}

export class UnpauseWithdrawalsCall__Outputs {
  _call: UnpauseWithdrawalsCall;

  constructor(call: UnpauseWithdrawalsCall) {
    this._call = call;
  }
}

export class WithdrawalCall extends ethereum.Call {
  get inputs(): WithdrawalCall__Inputs {
    return new WithdrawalCall__Inputs(this);
  }

  get outputs(): WithdrawalCall__Outputs {
    return new WithdrawalCall__Outputs(this);
  }
}

export class WithdrawalCall__Inputs {
  _call: WithdrawalCall;

  constructor(call: WithdrawalCall) {
    this._call = call;
  }
}

export class WithdrawalCall__Outputs {
  _call: WithdrawalCall;

  constructor(call: WithdrawalCall) {
    this._call = call;
  }
}

// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ApprovedMerchantContract extends ethereum.Event {
  get params(): ApprovedMerchantContract__Params {
    return new ApprovedMerchantContract__Params(this);
  }
}

export class ApprovedMerchantContract__Params {
  _event: ApprovedMerchantContract;

  constructor(event: ApprovedMerchantContract) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get Approved(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class CreateMerchantContract extends ethereum.Event {
  get params(): CreateMerchantContract__Params {
    return new CreateMerchantContract__Params(this);
  }
}

export class CreateMerchantContract__Params {
  _event: CreateMerchantContract;

  constructor(event: CreateMerchantContract) {
    this._event = event;
  }

  get ID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get MerchantAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get MerchantName(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class NewMerchantContractApproved extends ethereum.Event {
  get params(): NewMerchantContractApproved__Params {
    return new NewMerchantContractApproved__Params(this);
  }
}

export class NewMerchantContractApproved__Params {
  _event: NewMerchantContractApproved;

  constructor(event: NewMerchantContractApproved) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PausedMerchantContract extends ethereum.Event {
  get params(): PausedMerchantContract__Params {
    return new PausedMerchantContract__Params(this);
  }
}

export class PausedMerchantContract__Params {
  _event: PausedMerchantContract;

  constructor(event: PausedMerchantContract) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get Paused(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class SaveHistoric extends ethereum.Event {
  get params(): SaveHistoric__Params {
    return new SaveHistoric__Params(this);
  }
}

export class SaveHistoric__Params {
  _event: SaveHistoric;

  constructor(event: SaveHistoric) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get Sells(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get Refunds(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get Purchases(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get Cancellations(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class VoteNewMerchantContractApproval extends ethereum.Event {
  get params(): VoteNewMerchantContractApproval__Params {
    return new VoteNewMerchantContractApproval__Params(this);
  }
}

export class VoteNewMerchantContractApproval__Params {
  _event: VoteNewMerchantContractApproval;

  constructor(event: VoteNewMerchantContractApproval) {
    this._event = event;
  }

  get Voter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MainContract__merchantsResult {
  value0: Address;
  value1: string;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: Address, value1: string, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getMerchantContract(): Address {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }

  getStatus(): BigInt {
    return this.value2;
  }

  getVotes(): BigInt {
    return this.value3;
  }
}

export class MainContract__merchants2Result {
  value0: Address;
  value1: string;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: Address, value1: string, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getMerchantContract(): Address {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }

  getStatus(): BigInt {
    return this.value2;
  }

  getVotes(): BigInt {
    return this.value3;
  }
}

export class MainContract extends ethereum.SmartContract {
  static bind(address: Address): MainContract {
    return new MainContract("MainContract", address);
  }

  getMerchantAddress(MerchantContractID: BigInt): Address {
    let result = super.call(
      "getMerchantAddress",
      "getMerchantAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(MerchantContractID)]
    );

    return result[0].toAddress();
  }

  try_getMerchantAddress(
    MerchantContractID: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getMerchantAddress",
      "getMerchantAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(MerchantContractID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  merchants(param0: BigInt): MainContract__merchantsResult {
    let result = super.call(
      "merchants",
      "merchants(uint256):(address,string,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new MainContract__merchantsResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_merchants(
    param0: BigInt
  ): ethereum.CallResult<MainContract__merchantsResult> {
    let result = super.tryCall(
      "merchants",
      "merchants(uint256):(address,string,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MainContract__merchantsResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  merchants2(param0: Address): MainContract__merchants2Result {
    let result = super.call(
      "merchants2",
      "merchants2(address):(address,string,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new MainContract__merchants2Result(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_merchants2(
    param0: Address
  ): ethereum.CallResult<MainContract__merchants2Result> {
    let result = super.tryCall(
      "merchants2",
      "merchants2(address):(address,string,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MainContract__merchants2Result(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get OWNER(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddMerchantContractCall extends ethereum.Call {
  get inputs(): AddMerchantContractCall__Inputs {
    return new AddMerchantContractCall__Inputs(this);
  }

  get outputs(): AddMerchantContractCall__Outputs {
    return new AddMerchantContractCall__Outputs(this);
  }
}

export class AddMerchantContractCall__Inputs {
  _call: AddMerchantContractCall;

  constructor(call: AddMerchantContractCall) {
    this._call = call;
  }

  get MerchantAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get MerchantName(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddMerchantContractCall__Outputs {
  _call: AddMerchantContractCall;

  constructor(call: AddMerchantContractCall) {
    this._call = call;
  }
}

export class DisapproveMerchantContractCall extends ethereum.Call {
  get inputs(): DisapproveMerchantContractCall__Inputs {
    return new DisapproveMerchantContractCall__Inputs(this);
  }

  get outputs(): DisapproveMerchantContractCall__Outputs {
    return new DisapproveMerchantContractCall__Outputs(this);
  }
}

export class DisapproveMerchantContractCall__Inputs {
  _call: DisapproveMerchantContractCall;

  constructor(call: DisapproveMerchantContractCall) {
    this._call = call;
  }

  get MerchantContractID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DisapproveMerchantContractCall__Outputs {
  _call: DisapproveMerchantContractCall;

  constructor(call: DisapproveMerchantContractCall) {
    this._call = call;
  }
}

export class FreezeWithdrawalsMerchantContractCall extends ethereum.Call {
  get inputs(): FreezeWithdrawalsMerchantContractCall__Inputs {
    return new FreezeWithdrawalsMerchantContractCall__Inputs(this);
  }

  get outputs(): FreezeWithdrawalsMerchantContractCall__Outputs {
    return new FreezeWithdrawalsMerchantContractCall__Outputs(this);
  }
}

export class FreezeWithdrawalsMerchantContractCall__Inputs {
  _call: FreezeWithdrawalsMerchantContractCall;

  constructor(call: FreezeWithdrawalsMerchantContractCall) {
    this._call = call;
  }

  get MerchantContractID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FreezeWithdrawalsMerchantContractCall__Outputs {
  _call: FreezeWithdrawalsMerchantContractCall;

  constructor(call: FreezeWithdrawalsMerchantContractCall) {
    this._call = call;
  }
}

export class UnfreezeWithdrawalsMerchantContractCall extends ethereum.Call {
  get inputs(): UnfreezeWithdrawalsMerchantContractCall__Inputs {
    return new UnfreezeWithdrawalsMerchantContractCall__Inputs(this);
  }

  get outputs(): UnfreezeWithdrawalsMerchantContractCall__Outputs {
    return new UnfreezeWithdrawalsMerchantContractCall__Outputs(this);
  }
}

export class UnfreezeWithdrawalsMerchantContractCall__Inputs {
  _call: UnfreezeWithdrawalsMerchantContractCall;

  constructor(call: UnfreezeWithdrawalsMerchantContractCall) {
    this._call = call;
  }

  get MerchantContractID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UnfreezeWithdrawalsMerchantContractCall__Outputs {
  _call: UnfreezeWithdrawalsMerchantContractCall;

  constructor(call: UnfreezeWithdrawalsMerchantContractCall) {
    this._call = call;
  }
}

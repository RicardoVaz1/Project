// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ApprovedMerchantContract extends ethereum.Event {
  get params(): ApprovedMerchantContract__Params {
    return new ApprovedMerchantContract__Params(this);
  }
}

export class ApprovedMerchantContract__Params {
  _event: ApprovedMerchantContract;

  constructor(event: ApprovedMerchantContract) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get MerchantName(): string {
    return this._event.parameters[1].value.toString();
  }

  get Approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class Buy extends ethereum.Event {
  get params(): Buy__Params {
    return new Buy__Params(this);
  }
}

export class Buy__Params {
  _event: Buy;

  constructor(event: Buy) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get IDPurchase(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get DateFinished(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get BuyerAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get PurchaseAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get PurchaseStatus(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Complete extends ethereum.Event {
  get params(): Complete__Params {
    return new Complete__Params(this);
  }
}

export class Complete__Params {
  _event: Complete;

  constructor(event: Complete) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get IDPurchase(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CreatePurchase extends ethereum.Event {
  get params(): CreatePurchase__Params {
    return new CreatePurchase__Params(this);
  }
}

export class CreatePurchase__Params {
  _event: CreatePurchase;

  constructor(event: CreatePurchase) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get IDPurchase(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get DateCreated(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get PurchaseAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get EscrowTime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get PurchaseStatus(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class CreatedMerchantContract extends ethereum.Event {
  get params(): CreatedMerchantContract__Params {
    return new CreatedMerchantContract__Params(this);
  }
}

export class CreatedMerchantContract__Params {
  _event: CreatedMerchantContract;

  constructor(event: CreatedMerchantContract) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get MerchantAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get MerchantName(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class Historic extends ethereum.Event {
  get params(): Historic__Params {
    return new Historic__Params(this);
  }
}

export class Historic__Params {
  _event: Historic;

  constructor(event: Historic) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get Sells(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get Refunds(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PausedMerchantContract extends ethereum.Event {
  get params(): PausedMerchantContract__Params {
    return new PausedMerchantContract__Params(this);
  }
}

export class PausedMerchantContract__Params {
  _event: PausedMerchantContract;

  constructor(event: PausedMerchantContract) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get Paused(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Refund extends ethereum.Event {
  get params(): Refund__Params {
    return new Refund__Params(this);
  }
}

export class Refund__Params {
  _event: Refund;

  constructor(event: Refund) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get IDPurchase(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get Date(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get BuyerAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get RefundAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get PurchaseStatus(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class TopUpMyContract extends ethereum.Event {
  get params(): TopUpMyContract__Params {
    return new TopUpMyContract__Params(this);
  }
}

export class TopUpMyContract__Params {
  _event: TopUpMyContract;

  constructor(event: TopUpMyContract) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get Amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class VoteNewMerchantContract extends ethereum.Event {
  get params(): VoteNewMerchantContract__Params {
    return new VoteNewMerchantContract__Params(this);
  }
}

export class VoteNewMerchantContract__Params {
  _event: VoteNewMerchantContract;

  constructor(event: VoteNewMerchantContract) {
    this._event = event;
  }

  get Voter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Withdrawal extends ethereum.Event {
  get params(): Withdrawal__Params {
    return new Withdrawal__Params(this);
  }
}

export class Withdrawal__Params {
  _event: Withdrawal;

  constructor(event: Withdrawal) {
    this._event = event;
  }

  get MerchantContractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get Balance(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MainContract__merchantsResult {
  value0: Address;
  value1: string;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: Address,
    value1: string,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getMerchantContract(): Address {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }

  getStatus_contract(): BigInt {
    return this.value2;
  }

  getStatus_withdrawals(): BigInt {
    return this.value3;
  }

  getVotes(): BigInt {
    return this.value4;
  }
}

export class MainContract extends ethereum.SmartContract {
  static bind(address: Address): MainContract {
    return new MainContract("MainContract", address);
  }

  RequiredNumberOfVotes(): BigInt {
    let result = super.call(
      "RequiredNumberOfVotes",
      "RequiredNumberOfVotes():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_RequiredNumberOfVotes(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "RequiredNumberOfVotes",
      "RequiredNumberOfVotes():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMerchantContractNumberOfVotes(MerchantContractAddress: Address): BigInt {
    let result = super.call(
      "getMerchantContractNumberOfVotes",
      "getMerchantContractNumberOfVotes(address):(uint256)",
      [ethereum.Value.fromAddress(MerchantContractAddress)]
    );

    return result[0].toBigInt();
  }

  try_getMerchantContractNumberOfVotes(
    MerchantContractAddress: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMerchantContractNumberOfVotes",
      "getMerchantContractNumberOfVotes(address):(uint256)",
      [ethereum.Value.fromAddress(MerchantContractAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMerchantContractStatusContract(MerchantContractAddress: Address): BigInt {
    let result = super.call(
      "getMerchantContractStatusContract",
      "getMerchantContractStatusContract(address):(uint256)",
      [ethereum.Value.fromAddress(MerchantContractAddress)]
    );

    return result[0].toBigInt();
  }

  try_getMerchantContractStatusContract(
    MerchantContractAddress: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMerchantContractStatusContract",
      "getMerchantContractStatusContract(address):(uint256)",
      [ethereum.Value.fromAddress(MerchantContractAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMerchantContractStatusWithdrawals(
    MerchantContractAddress: Address
  ): BigInt {
    let result = super.call(
      "getMerchantContractStatusWithdrawals",
      "getMerchantContractStatusWithdrawals(address):(uint256)",
      [ethereum.Value.fromAddress(MerchantContractAddress)]
    );

    return result[0].toBigInt();
  }

  try_getMerchantContractStatusWithdrawals(
    MerchantContractAddress: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMerchantContractStatusWithdrawals",
      "getMerchantContractStatusWithdrawals(address):(uint256)",
      [ethereum.Value.fromAddress(MerchantContractAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOwnerAddress(): Address {
    let result = super.call(
      "getOwnerAddress",
      "getOwnerAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getOwnerAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getOwnerAddress",
      "getOwnerAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRequiredNumberOfVotes(): BigInt {
    let result = super.call(
      "getRequiredNumberOfVotes",
      "getRequiredNumberOfVotes():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getRequiredNumberOfVotes(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRequiredNumberOfVotes",
      "getRequiredNumberOfVotes():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  merchants(param0: Address): MainContract__merchantsResult {
    let result = super.call(
      "merchants",
      "merchants(address):(address,string,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new MainContract__merchantsResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try_merchants(
    param0: Address
  ): ethereum.CallResult<MainContract__merchantsResult> {
    let result = super.tryCall(
      "merchants",
      "merchants(address):(address,string,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MainContract__merchantsResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ChangeRequiredNumberOfVotesCall extends ethereum.Call {
  get inputs(): ChangeRequiredNumberOfVotesCall__Inputs {
    return new ChangeRequiredNumberOfVotesCall__Inputs(this);
  }

  get outputs(): ChangeRequiredNumberOfVotesCall__Outputs {
    return new ChangeRequiredNumberOfVotesCall__Outputs(this);
  }
}

export class ChangeRequiredNumberOfVotesCall__Inputs {
  _call: ChangeRequiredNumberOfVotesCall;

  constructor(call: ChangeRequiredNumberOfVotesCall) {
    this._call = call;
  }

  get NumberOfVotes(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeRequiredNumberOfVotesCall__Outputs {
  _call: ChangeRequiredNumberOfVotesCall;

  constructor(call: ChangeRequiredNumberOfVotesCall) {
    this._call = call;
  }
}

export class CreateMerchantContractCall extends ethereum.Call {
  get inputs(): CreateMerchantContractCall__Inputs {
    return new CreateMerchantContractCall__Inputs(this);
  }

  get outputs(): CreateMerchantContractCall__Outputs {
    return new CreateMerchantContractCall__Outputs(this);
  }
}

export class CreateMerchantContractCall__Inputs {
  _call: CreateMerchantContractCall;

  constructor(call: CreateMerchantContractCall) {
    this._call = call;
  }

  get MerchantWalletAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get MerchantName(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateMerchantContractCall__Outputs {
  _call: CreateMerchantContractCall;

  constructor(call: CreateMerchantContractCall) {
    this._call = call;
  }
}

export class DisapproveMerchantContractCall extends ethereum.Call {
  get inputs(): DisapproveMerchantContractCall__Inputs {
    return new DisapproveMerchantContractCall__Inputs(this);
  }

  get outputs(): DisapproveMerchantContractCall__Outputs {
    return new DisapproveMerchantContractCall__Outputs(this);
  }
}

export class DisapproveMerchantContractCall__Inputs {
  _call: DisapproveMerchantContractCall;

  constructor(call: DisapproveMerchantContractCall) {
    this._call = call;
  }

  get MerchantContractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DisapproveMerchantContractCall__Outputs {
  _call: DisapproveMerchantContractCall;

  constructor(call: DisapproveMerchantContractCall) {
    this._call = call;
  }
}

export class EventsMerchantContractsCall extends ethereum.Call {
  get inputs(): EventsMerchantContractsCall__Inputs {
    return new EventsMerchantContractsCall__Inputs(this);
  }

  get outputs(): EventsMerchantContractsCall__Outputs {
    return new EventsMerchantContractsCall__Outputs(this);
  }
}

export class EventsMerchantContractsCall__Inputs {
  _call: EventsMerchantContractsCall;

  constructor(call: EventsMerchantContractsCall) {
    this._call = call;
  }

  get eventID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get MerchantContractAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get Amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class EventsMerchantContractsCall__Outputs {
  _call: EventsMerchantContractsCall;

  constructor(call: EventsMerchantContractsCall) {
    this._call = call;
  }
}

export class EventsMerchantContracts2Call extends ethereum.Call {
  get inputs(): EventsMerchantContracts2Call__Inputs {
    return new EventsMerchantContracts2Call__Inputs(this);
  }

  get outputs(): EventsMerchantContracts2Call__Outputs {
    return new EventsMerchantContracts2Call__Outputs(this);
  }
}

export class EventsMerchantContracts2Call__Inputs {
  _call: EventsMerchantContracts2Call;

  constructor(call: EventsMerchantContracts2Call) {
    this._call = call;
  }

  get eventID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get MerchantContractAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get IDPurchase(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get Sells(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get Refunds(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class EventsMerchantContracts2Call__Outputs {
  _call: EventsMerchantContracts2Call;

  constructor(call: EventsMerchantContracts2Call) {
    this._call = call;
  }
}

export class EventsMerchantContracts3Call extends ethereum.Call {
  get inputs(): EventsMerchantContracts3Call__Inputs {
    return new EventsMerchantContracts3Call__Inputs(this);
  }

  get outputs(): EventsMerchantContracts3Call__Outputs {
    return new EventsMerchantContracts3Call__Outputs(this);
  }
}

export class EventsMerchantContracts3Call__Inputs {
  _call: EventsMerchantContracts3Call;

  constructor(call: EventsMerchantContracts3Call) {
    this._call = call;
  }

  get eventID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get MerchantContractAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get IDPurchase(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get Date(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get BuyerAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get Amount(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get PurchaseStatus(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get EscrowTime(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }
}

export class EventsMerchantContracts3Call__Outputs {
  _call: EventsMerchantContracts3Call;

  constructor(call: EventsMerchantContracts3Call) {
    this._call = call;
  }
}

export class FreezeWithdrawalsMerchantContractCall extends ethereum.Call {
  get inputs(): FreezeWithdrawalsMerchantContractCall__Inputs {
    return new FreezeWithdrawalsMerchantContractCall__Inputs(this);
  }

  get outputs(): FreezeWithdrawalsMerchantContractCall__Outputs {
    return new FreezeWithdrawalsMerchantContractCall__Outputs(this);
  }
}

export class FreezeWithdrawalsMerchantContractCall__Inputs {
  _call: FreezeWithdrawalsMerchantContractCall;

  constructor(call: FreezeWithdrawalsMerchantContractCall) {
    this._call = call;
  }

  get MerchantContractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class FreezeWithdrawalsMerchantContractCall__Outputs {
  _call: FreezeWithdrawalsMerchantContractCall;

  constructor(call: FreezeWithdrawalsMerchantContractCall) {
    this._call = call;
  }
}

export class UnfreezeWithdrawalsMerchantContractCall extends ethereum.Call {
  get inputs(): UnfreezeWithdrawalsMerchantContractCall__Inputs {
    return new UnfreezeWithdrawalsMerchantContractCall__Inputs(this);
  }

  get outputs(): UnfreezeWithdrawalsMerchantContractCall__Outputs {
    return new UnfreezeWithdrawalsMerchantContractCall__Outputs(this);
  }
}

export class UnfreezeWithdrawalsMerchantContractCall__Inputs {
  _call: UnfreezeWithdrawalsMerchantContractCall;

  constructor(call: UnfreezeWithdrawalsMerchantContractCall) {
    this._call = call;
  }

  get MerchantContractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnfreezeWithdrawalsMerchantContractCall__Outputs {
  _call: UnfreezeWithdrawalsMerchantContractCall;

  constructor(call: UnfreezeWithdrawalsMerchantContractCall) {
    this._call = call;
  }
}

export class VoteNewMerchantContractApprovalCall extends ethereum.Call {
  get inputs(): VoteNewMerchantContractApprovalCall__Inputs {
    return new VoteNewMerchantContractApprovalCall__Inputs(this);
  }

  get outputs(): VoteNewMerchantContractApprovalCall__Outputs {
    return new VoteNewMerchantContractApprovalCall__Outputs(this);
  }
}

export class VoteNewMerchantContractApprovalCall__Inputs {
  _call: VoteNewMerchantContractApprovalCall;

  constructor(call: VoteNewMerchantContractApprovalCall) {
    this._call = call;
  }

  get MerchantContractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class VoteNewMerchantContractApprovalCall__Outputs {
  _call: VoteNewMerchantContractApprovalCall;

  constructor(call: VoteNewMerchantContractApprovalCall) {
    this._call = call;
  }
}

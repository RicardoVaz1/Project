type ApproveMerchantContract @entity(immutable: true) {
  id: Bytes!
  contractInstance: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Buy @entity(immutable: true) {
  id: Bytes!
  contractInstance: Bytes! # address
  idPurchase: BigInt! # uint256
  cancelTime: BigInt! # uint256
  completeTime: BigInt! # uint256
  buyerAddress: Bytes! # address
  purchaseAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Cancel @entity(immutable: true) {
  id: Bytes!
  contractInstance: Bytes! # address
  buyerAddress: Bytes! # address
  idPurchase: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Complete @entity(immutable: true) {
  id: Bytes!
  contractInstance: Bytes! # address
  idPurchase: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CreateMerchantContract @entity(immutable: true) {
  id: Bytes!
  contractInstance: Bytes! # address
  merchantAddress: Bytes! # address
  merchantName: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CreatePurchase @entity(immutable: true) {
  id: Bytes!
  contractInstance: Bytes! # address
  idPurchase: BigInt! # uint256
  purchaseAmount: BigInt! # uint256
  cancelTime: BigInt! # uint256
  completeTime: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PauseMerchantContract @entity(immutable: true) {
  id: Bytes!
  contractInstance: Bytes! # address
  paused: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Refund @entity(immutable: true) {
  id: Bytes!
  contractInstance: Bytes! # address
  idPurchase: BigInt! # uint256
  buyerAddress: Bytes! # address
  refundAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoteNewMerchantContract @entity(immutable: true) {
  id: Bytes!
  contractInstance: Bytes! # address
  voter: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type WithdrawRest @entity(immutable: true) {
  id: Bytes!
  contractInstance: Bytes! # address
  restBalance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdrawal @entity(immutable: true) {
  id: Bytes!
  contractInstance: Bytes! # address
  merchantBalance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
